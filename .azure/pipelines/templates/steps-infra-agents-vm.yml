# steps-infra-agents-vm.yml
# Description:
#   Steps template used to provision VM infrastructure.
 
parameters:
# The environemnt type.
- name: environmentType
  type: string
  values:
  - ephemeral
  - sandbox
  - integration
  - development
  - demo
  - test
  - acceptance
  - staging
  - production

# The organization name.
- name: organizationName
  type: string

# The location.
- name: location
  type: string

# The subscription Id.
- name: subscription
  type: string

# The bicep template file path.
- name: templateFilePath
  type: string

# Service Connection name
- name: serviceConnectionName
  type: string

steps:

- task: DownloadSecureFile@1
  name: caCertificate
  displayName: 'Download Public SSH Key'
  inputs:
    secureFile: 'vmagent-priv-key.pub'

- task: AzureCLI@2
  displayName: Upload script files
  inputs:
    azureSubscription: ${{ parameters.serviceConnectionName }}
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    failOnStandardError: true
    inlineScript: |
      $agentInstallerScriptDir = "agentinstallerscript-$(Build.BuildId)"
      Write-Host "agentInstallerScriptDir=$agentInstallerScriptDir"
      New-Item -Path "$(Agent.TempDirectory)" -Name "scriptextensions/$agentInstallerScriptDir" -ItemType "directory"
      Copy-Item -Path "$(Build.SourcesDirectory)/iac/scripts/agentinstall/*" -Destination "$(Agent.TempDirectory)/scriptextensions/$agentInstallerScriptDir" -Recurse

      az storage blob upload-batch `
          --destination scriptextensions `
          --source $(Agent.TempDirectory)/scriptextensions `
          --account-name stagentpasbxu63kxyluy6fd `
          --auth-mode login

- task: AzureCLI@2
  displayName: Provision VM(s)
  inputs:
    azureSubscription: ${{ parameters.serviceConnectionName }}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    failOnStandardError: true
    inlineScript: |
      organizationName=$1
      location=$2
      subscription=$3
      environmentType=$4
      templateFilePath=$5
      sshPubKeyFilePath=$6

      publicKey=$(cat "$sshPubKeyFilePath")

      az deployment group create \
        --resource-group 'rg-pipelineagent-sandbox-u63kxyluy6fdo-agent' \
        --name agentVmDeployment \
        --no-prompt true \
        --subscription $subscription \
        --template-file $templateFilePath \
        --parameters \
            environmentType=$environmentType \
            organization=$organizationName \
            resourceGroupName='rg-pipelineagent-sandbox-u63kxyluy6fdo-agent' \
            adminPublicKey="$publicKey" \
            existingSharedImageGalleryName='sig.contoso.images' \
            existingImageResourceGroupName='rg-contoso-images' \
            imageDefinitionName='ubuntu2004' \
            imageDefinitionVersion='1.0.76' \
            existingNetworkSecurityGroupName='nsg-agent' \
            existingVnetName='vnet-agent' \
            existingSubnetName='snet-agent' \
            existingStorageAccountName='stagentpasbxu63kxyluy6fd' \
            scriptExtensionScriptUris='("https://stagentpasbxu63kxyluy6fd.blob.core.windows.net/scriptextensions/hello.sh")'

    arguments: >
      ${{ parameters.organizationName }}
      ${{ parameters.location }}
      ${{ parameters.subscription }}
      ${{ parameters.environmentType }}
      ${{ parameters.templateFilePath }}
      $(caCertificate.secureFilePath)


