# steps-infra-agents-vm.yml
# Description:
#   Steps template used to provision VM infrastructure.
 
parameters:
# The environemnt type.
- name: environmentType
  type: string
  values:
  - ephemeral
  - sandbox
  - integration
  - development
  - demo
  - test
  - acceptance
  - staging
  - production

# The organization name.
- name: organizationName
  type: string

# The location.
- name: location
  type: string

# The subscription Id.
- name: subscription
  type: string

# The bicep template file path.
- name: templateFilePath
  type: string

# Service Connection name
- name: serviceConnectionName
  type: string

# The storage account name name used 
# to store ephemeral agent installer scripts
- name: agentInstallerStorageAccountName
  type: string

# The storage account container name used 
# to store ephemeral agent installer scripts
- name: agentInstallerContainerName
  type: string

# The source directory path of the 
# the scripts used to install 
# the agent software.
- name: agentInstallerSourcePath
  type: string

# The directory name used inside
# the storage container that temporarily
# is used as a storage location for this pipeline
# run to use so VMs can access the the
# agent installer script. This is cleaned
# up at the end of a pipeline.
- name: agentInstallerDirectory
  type: string

steps:

- checkout: self

- task: DownloadSecureFile@1
  name: caCertificate
  displayName: 'Download Public SSH Key'
  inputs:
    secureFile: 'vmagent-priv-key.pub'

- task: AzureCLI@2
  name: uploadInstallerFiles
  displayName: Upload agent installer script files
  inputs:
    azureSubscription: ${{ parameters.serviceConnectionName }}
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az storage blob upload-batch `
          --destination ${{ parameters.agentInstallerContainerName }}/${{ parameters.agentInstallerDirectory }} `
          --source ${{ parameters.agentInstallerSourcePath }} `
          --account-name ${{ parameters.agentInstallerStorageAccountName }} `
          --auth-mode login

- task: AzureCLI@2
  displayName: Provision VM(s)
  inputs:
    azureSubscription: ${{ parameters.serviceConnectionName }}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    failOnStandardError: true
    inlineScript: |
      organizationName=$1
      location=$2
      subscription=$3
      environmentType=$4
      templateFilePath=$5
      sshPubKeyFilePath=$6
      agentResourceGroupName=$7
      imageResourceGroupName=$8
      sharedImageGalleryName=$9
      imageDefinitionName=$10
      imageDefinitionVersion=$11
      networkSecurityGroupName=$12
      vnetName=$13
      subnetName=$14
      agentStorageAccountName=$15

      publicKey=$(cat "$sshPubKeyFilePath")

      az deployment group create \
        --resource-group '$agentResourceGroupName' \
        --name agentVmDeployment \
        --no-prompt true \
        --subscription $subscription \
        --template-file $templateFilePath \
        --parameters \
            environmentType=$environmentType \
            organization=$organizationName \
            resourceGroupName='$agentResourceGroupName' \
            adminPublicKey="$publicKey" \
            existingSharedImageGalleryName='$sharedImageGalleryName' \
            existingImageResourceGroupName='$imageResourceGroupName' \
            imageDefinitionName='$imageDefinitionName' \
            imageDefinitionVersion='$imageDefinitionVersion' \
            existingNetworkSecurityGroupName='$networkSecurityGroupName' \
            existingVnetName='$vnetName' \
            existingSubnetName='$subnetName' \
            existingStorageAccountName='$agentStorageAccountName' \
            scriptExtensionScriptUris='("https://stagentpasbxu63kxyluy6fd.blob.core.windows.net/scriptextensions/hello.sh")'

    arguments: >
      ${{ parameters.organizationName }}
      ${{ parameters.location }}
      ${{ parameters.subscription }}
      ${{ parameters.environmentType }}
      ${{ parameters.templateFilePath }}
      $(caCertificate.secureFilePath)
      $(agentResourceGroupName)
      $(imageResourceGroupName)
      $(sharedImageGalleryName)
      $(imageDefinitionName)
      $(imageDefinitionVersion)
      $(networkSecurityGroupName)
      $(vnetName)
      $(subnetName)
      $(agentStorageAccountName)

- task: AzureCLI@2
  displayName: Delete installer script files
  condition: always()
  inputs:
    azureSubscription: ${{ parameters.serviceConnectionName }}
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    failOnStandardError: true
    inlineScript: |
      az storage blob delete-batch `
          --source ${{ parameters.agentInstallerContainerName }} `
          --pattern ${{ parameters.agentInstallerDirectory }}/* `
          --account-name ${{ parameters.agentInstallerStorageAccountName }} `
          --auth-mode login


