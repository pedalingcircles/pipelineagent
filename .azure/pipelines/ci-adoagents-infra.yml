# ci-infra-adoagents.yml
#
# Description: 
#   Build for IaC components of the pipeline agents infrastructure. Lints, 
#   validates, and copies all scripts and templates along with any other 
#   various artifacts to the drop location for publishing.

name: $(Build.DefinitionName)-$(SourceBranchName)-$(versionSemantic)

variables:
# Versioning template used for version this 
#CI pipeline based on Semantic versioning.
- template: templates/variables-version-semantic.yml
  parameters:
    versionMajor: 1
    versionMinor: 1
- template: templates/variables-config-sbx.yml
- name: artifactName
  value: drop-infra
- name: serviceConnection
  value: agent-image-contoso-app-sbx

trigger:
  batch: true
  branches:
    include:
    - main
  paths:
    include:
    - '/iac/*'
    - '/scripts/*'

stages:

- stage: lint
  displayName: Lint
  dependsOn: []
  jobs:
  - job: buildLintBicep
    displayName: Lint and Build Bicep Files
    steps:
    - checkout: self
      clean: true
      fetchDepth: 1

    - task: PowerShell@2
      displayName: Validate Bicep Installation
      inputs:
        targetType: 'inline'
        script: |
          az bicep version
          if (0 -ne $LASTEXITCODE) {
            az bicep install
            if (0 -ne $LASTEXITCODE) {
              throw "Failed installing Azure Bicep CLI"
            }
          }
        pwsh: true

    - task: PowerShell@2
      displayName: Build Bicep files
      inputs:
        targetType: 'inline'
        script: |
          az bicep version

          Get-ChildItem -Path .\ -Filter *.bicep -Recurse -File | ForEach-Object { 
            $bicepFilePath = $_.FullName 
            # Build and lint the bicep file
            az bicep build --file $bicepFilePath
          }
        pwsh: true
        failOnStderr: true  # set to true to capture stderr bicep errors from linter

    - publish: $(System.DefaultWorkingDirectory)
      artifact: $(artifactName)
    - script: |
        echo "##vso[build.addbuildtag]infra"
        echo "##vso[build.addbuildtag]pipelineagents"
        echo "##vso[build.addbuildtag]$(versionSemantic)"
        echo "##vso[build.addbuildtag]build"
      displayName: Tag Build

- stage: validate
  displayName: Validate
  dependsOn: []
  jobs:
  - job: validateAgentBicep
    displayName: Validate Agent Infra
    steps:
    - task: AzureCLI@2
      displayName: Validate ADO Agents Infrastructure Bicep
      inputs:
        azureSubscription: $(serviceConnection)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az deployment sub validate \
            --name validateCiDeployment \
            --location $(location) \
            --template-file $(Build.SourcesDirectory)/iac/adoagents-infra.bicep \
            --parameters environmentType=sandbox organization=contoso